{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Function to track input events and save to local storage\nfunction handleInput(event) {\n  // Collect form data from email and message fields\n  const formData = {\n    email: document.querySelector('input[name=\"email\"]').value,\n    message: document.querySelector('textarea[name=\"message\"]').value,\n  };\n\n  // Save the formData object to local storage under the key \"feedback-form-state\"\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\n// Function to check local storage state and fill form fields\nfunction loadFormState() {\n  // Retrieve stored form data from local storage\n  const storedFormData = localStorage.getItem('feedback-form-state');\n\n  // If stored data exists, fill the form fields with the saved values\n  if (storedFormData) {\n    const formData = JSON.parse(storedFormData);\n\n    // Fill form fields with values from local storage\n    document.querySelector('input[name=\"email\"]').value = formData.email;\n    document.querySelector('textarea[name=\"message\"]').value = formData.message;\n  }\n}\n\n// Function to handle form submission\nfunction handleSubmit(event) {\n  // Prevent the default form submission behavior\n  event.preventDefault();\n\n  // Clear local storage and reset form fields\n  localStorage.removeItem('feedback-form-state');\n  document.querySelector('.feedback-form').reset();\n\n  // Log an object with email and message fields and their current values to the console\n  const formData = {\n    email: document.querySelector('input[name=\"email\"]').value,\n    message: document.querySelector('textarea[name=\"message\"]').value,\n  };\n  console.log(formData);\n}\n\n// Add an input event listener to the form using event delegation\ndocument.querySelector('.feedback-form').addEventListener('input', handleInput);\n\n// Call the loadFormState function when the page is loaded\ndocument.addEventListener('DOMContentLoaded', loadFormState);\n\n// Add a submit event listener to the form\ndocument.querySelector('.feedback-form').addEventListener('submit', handleSubmit);"],"names":["handleInput","event","formData","loadFormState","storedFormData","handleSubmit"],"mappings":"oDACA,SAASA,EAAYC,EAAO,CAE1B,MAAMC,EAAW,CACf,MAAO,SAAS,cAAc,qBAAqB,EAAE,MACrD,QAAS,SAAS,cAAc,0BAA0B,EAAE,KAChE,EAGE,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAQ,CAAC,CACtE,CAGA,SAASC,GAAgB,CAEvB,MAAMC,EAAiB,aAAa,QAAQ,qBAAqB,EAGjE,GAAIA,EAAgB,CAClB,MAAMF,EAAW,KAAK,MAAME,CAAc,EAG1C,SAAS,cAAc,qBAAqB,EAAE,MAAQF,EAAS,MAC/D,SAAS,cAAc,0BAA0B,EAAE,MAAQA,EAAS,OACrE,CACH,CAGA,SAASG,EAAaJ,EAAO,CAE3BA,EAAM,eAAc,EAGpB,aAAa,WAAW,qBAAqB,EAC7C,SAAS,cAAc,gBAAgB,EAAE,MAAK,EAG9C,MAAMC,EAAW,CACf,MAAO,SAAS,cAAc,qBAAqB,EAAE,MACrD,QAAS,SAAS,cAAc,0BAA0B,EAAE,KAChE,EACE,QAAQ,IAAIA,CAAQ,CACtB,CAGA,SAAS,cAAc,gBAAgB,EAAE,iBAAiB,QAASF,CAAW,EAG9E,SAAS,iBAAiB,mBAAoBG,CAAa,EAG3D,SAAS,cAAc,gBAAgB,EAAE,iBAAiB,SAAUE,CAAY"}